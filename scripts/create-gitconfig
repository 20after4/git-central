#!/bin/bash
#
# Creates a separate DAG in your repo for git config files.
#
# This allows you to checkout/modify/push the config/hooks for your repo
# locally. Then, with the help of post-receive-gitconfig, have your changes be
# automatically updated on the server.
#
# Also, it keeps all of your repo-specific information in your repo instead of
# leaking out into potentiallyshared hook scripts.
#

# Create an empty file object
empty_file_hash=$(git hash-object -w --stdin <<FOO
FOO)

# Make a root directory tree with the config file in it
config_tree_hash=$(git mktree <<FOO
100644 blob $empty_file_hash	config
FOO)

# Commit the root directory tree
commit_hash=$(git commit-tree $config_tree_hash <<FOO
Initial commit on config branch.
FOO)

# Push the commit out to the gitconfig branch
git update-ref refs/heads/gitconfig "$commit_hash" 0000000000000000000000000000000000000000

